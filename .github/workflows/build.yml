name: build

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
    branches:
      - 'master'
      - 'main'
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      -
        name: Verify required files
        run: |
          if (!(Test-Path "main.go")) { Write-Error "main.go not found"; exit 1 }
          if (!(Test-Path "go.mod")) { Write-Error "go.mod not found"; exit 1 }
          if (!(Test-Path "versioninfo.json")) { Write-Error "versioninfo.json not found"; exit 1 }
          if (!(Test-Path "res/papp.ico")) { Write-Error "res/papp.ico not found"; exit 1 }
          if (!(Test-Path "res/papp.manifest")) { Write-Error "res/papp.manifest not found"; exit 1 }
          Write-Host "All required files found"
      -
        name: Build application
        run: |
          go mod download
          go mod tidy
          go generate
          go build -ldflags "-s -w" -o vscode-portable.exe
          Write-Host "Build completed successfully"
      -
        name: Download VSCode
        shell: powershell
        run: |
          $version = "1.101.2"
          $url = "https://update.code.visualstudio.com/$version/win32-x64-archive/stable"
          Write-Host "Downloading VSCode $version from: $url"
          
          New-Item -ItemType Directory -Path "temp" -Force
          
          $maxRetries = 3
          $retryCount = 0
          do {
            try {
              Invoke-WebRequest -Uri $url -OutFile "temp/vscode.zip" -UserAgent "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"
              Write-Host "Download completed"
              break
            } catch {
              $retryCount++
              Write-Host "Download failed, retry $retryCount/$maxRetries"
              if ($retryCount -ge $maxRetries) { throw }
              Start-Sleep -Seconds 5
            }
          } while ($retryCount -lt $maxRetries)
          
          Write-Host "Extracting VSCode..."
          Expand-Archive -Path "temp/vscode.zip" -DestinationPath "temp/vscode-extracted" -Force
          
          New-Item -ItemType Directory -Path "app" -Force
          Move-Item "temp/vscode-extracted/*" "app/" -Force
          
          if (!(Test-Path "app/Code.exe")) { 
            Write-Error "VSCode extraction failed - Code.exe not found"
            exit 1 
          }
          Write-Host "VSCode extracted successfully"
      -
        name: Create portable structure
        shell: powershell
        run: |
          Write-Host "Creating portable structure..."
          
          New-Item -ItemType Directory -Path "vscode-portable" -Force
          New-Item -ItemType Directory -Path "vscode-portable/app" -Force
          New-Item -ItemType Directory -Path "vscode-portable/data" -Force
          New-Item -ItemType Directory -Path "vscode-portable/data/appdata" -Force
          New-Item -ItemType Directory -Path "vscode-portable/data/extensions" -Force
          New-Item -ItemType Directory -Path "vscode-portable/data/logs" -Force
          
          Write-Host "Copying VSCode files..."
          Copy-Item -Path "app/*" -Destination "vscode-portable/app/" -Recurse -Force
          
          Copy-Item -Path "vscode-portable.exe" -Destination "vscode-portable/"
          
          if (Test-Path "res/code.cmd") {
            Copy-Item -Path "res/code.cmd" -Destination "vscode-portable/"
          }
          
          $readme = "VSCode Portable 1.101-50`n`nUsage:`n1. Run vscode-portable.exe to start Visual Studio Code`n2. All your settings and extensions will be saved in the data folder`n3. Use code.cmd for command-line access if available`n`nBuilt by: hungvminh`nSource: https://github.com/hungvminh/vscode-portable"
          $readme | Out-File -FilePath "vscode-portable/README.txt" -Encoding UTF8
          
          Write-Host "Creating archive..."
          Compress-Archive -Path "vscode-portable/*" -DestinationPath "vscode-portable-1.101-50-win64.zip" -Force
          
          if (!(Test-Path "vscode-portable-1.101-50-win64.zip")) {
            Write-Error "Archive creation failed"
            exit 1
          }
          
          $archiveSize = (Get-Item "vscode-portable-1.101-50-win64.zip").Length / 1MB
          Write-Host "Archive created successfully ($([math]::Round($archiveSize, 2)) MB)"
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vscode-portable-1.101-50-win64
          path: |
            vscode-portable-1.101-50-win64.zip
            vscode-portable.exe
          retention-days: 30
      -
        name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            vscode-portable-1.101-50-win64.zip
            vscode-portable.exe
          body: "VSCode Portable 1.101-50 - Portable version of Visual Studio Code 1.101 with latest AI features. Built by hungvminh."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}